Exercídio 01

alert('Boas vindas ao nosso site!');
let nome = 'Lua';
let idade = 25;
let numeroDeVendas = 50;
let saldoDisponivel = 1000;

alert('Erro! Preencha todos os campos!');
let mensagemDeErro = 'Erro! Preencha todos os campos';

alert(mensagemDeErro);

let nome = prompt('Digite o seu nome');

let idade = prompt('Digite a sua idade');
if (idade>= 18) {
    alert('Pode tirar a habilitação!')
}

////////Aula 01.2

Nesta aula, aprendemos sobre condicionais e concatenação, especificamente sobre o comando else e como usar comentários no código.

O else é usado para criar um "contraponto" ao if, ou seja, ele define o que acontece quando a condição do if não é satisfeita.

Também aprendemos sobre a importância de usar comentários no código para explicar o que cada parte do código faz, tornando-o mais fácil de entender e de manter.

Para escrever um comentário em JavaScript, usamos o sinal de barra dupla //. Tudo que estiver depois do // será ignorado pelo interpretador JavaScript.

////////Aula 02.2

(string = texto)

Nessa aula, aprendemos sobre a importância de usar Template Strings para concatenar textos com variáveis e números em JavaScript.

Vimos que, ao usar aspas simples, o JavaScript interpreta o código como um texto, e não como uma variável. Para resolver isso, usamos as crases (`) e o sinal de cifrão ($) seguido da variável entre chaves {}.

Com isso, conseguimos criar mensagens mais dinâmicas, onde o valor da variável é inserido automaticamente na mensagem, sem precisarmos alterá-la manualmente.

Essa técnica é muito útil para evitar acoplamento no código, ou seja, a dependência de uma parte do código em outra.

Lembre-se: usar Template Strings torna o código mais flexível e fácil de manter!



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



Desafios
01. Pergunte ao usuário qual é o dia da semana. Se a resposta for "Sábado" ou "Domingo", mostre "Bom fim de semana!". Caso contrário, mostre "Boa semana!".

fimSemana = prompt('Qual é o dia da semana?');

if (fimSemana == 'sabado') {
alert('Bom fim de semana!');
} if (fimSemana == 'domingo') {
alert('Bom fim de semana!');`} else {
alert('Boa semana');
}

02.  Verifique se um número digitado pelo usuário é positivo ou negativo. Mostre um alerta informando.

if (numeroPositivo > 0) {
alert('O número é positivo');
} else {
alert('O número é negativo');
}


03. Crie um sistema de pontuação para um jogo. Se a pontuação for maior ou igual a 100, mostre "Parabéns, você venceu!". Caso contrário, mostre "Tente novamente para ganhar.".

pontuação = 105;
if (pontosJogo >= 100 {
console.log('Parabéns, você venceu!');
} else {
console.log('Tente novamente para ganhar');
}

04. Crie uma mensagem que informa o usuário sobre o saldo da conta, usando uma template string para incluir o valor do saldo.

let valorSaldo = 1000;
alert(`Seu saldo é de ${valorSaldo}`);

05. Peça ao usuário para inserir seu nome usando prompt. Em seguida, mostre um alerta de boas-vindas usando esse nome.

let nomeUsuario = prompt('Qual o seu nome');
alert(`Boas vindas ${nomeUsuario}`);


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////Aula 03.2
Nessa aula, aprendemos a dar dicas para o jogador do nosso jogo de adivinhar o número secreto.

Primeiro, criamos uma condição para verificar se o chute do jogador é maior ou menor que o número secreto.

Depois, usamos o alert() para mostrar uma mensagem informando se o número secreto é maior ou menor que o chute.

Por fim, vimos que o código está funcionando como esperado, mas ainda precisamos fazer algumas modificações para que o jogo continue até que o jogador acerte o número secreto.


////////Aula 03.3
Nessa aula, aprendemos sobre o loop while em JavaScript, que permite executar um bloco de código repetidamente enquanto uma determinada condição for verdadeira.

Vimos como usar o while para criar um jogo de adivinhação, onde o jogador precisa adivinhar um número secreto. O loop continua pedindo ao jogador para digitar um número até que ele adivinhe o número secreto.

Também aprendemos sobre a importância da indentação do código para melhorar a legibilidade e organização do código.

E por fim, vimos como usar operadores de comparação, como !=, == e >, para comparar variáveis e números dentro do código.


////////Aula 03.4
Primeiro, criamos uma variável chamada tentativas e a inicializamos com o valor 1, pois a primeira tentativa já é realizada ao iniciar o jogo.

Depois, dentro do bloco else, onde o jogador erra o chute, incrementamos a variável tentativas em 1, utilizando a notação tentativas++, que é uma forma mais concisa de escrever tentativas = tentativas + 1.

Por fim, ao acertar o número secreto, exibimos uma mensagem informando o número secreto e quantas tentativas foram necessárias para descobri-lo, utilizando a variável tentativas dentro de um template string.




////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




Desafios
Crie um contador que comece em 1 e vá até 10 usando um loop while. Mostre cada número.

let contador = 1;
while (contador <= 10) {
console.log(contador);
console++;
}

Crie um contador que começa em 10 e vá até 0 usando um loop while. Mostre cada número.

let contador = 10
while (contador >= 10) {
console.log(contador);
console--;
}

Crie um programa de contagem regressiva. Peça um número e conte deste número até 0, usando um loop while no console do navegador.

let numeroMaximo = prompt('Digite um número para a contagem regressiva');

while (numeroMaximo >= 0) {
console.log(numeroMaximo);
numeroMaximo--;

Crie um programa de contagem progressiva. Peça um número e conte de 0 até esse número, usando um loop while no console do navegador.

let contador = prompt('Digite um número para a contagem progressiva');

while (contador <= 0) {
console.log(contador);
contador++;
